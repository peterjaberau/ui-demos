import{_ as D,e as O}from"./index-eb73e870.js";import{R as F,r as y}from"./index-2c36b58a.js";import{I as K}from"./internal-1dcf455f.js";import{u as _}from"./form-field-context-fcff921e.js";import{b as w,f as j}from"./index-491afaa4.js";import{u as W}from"./index-33af1cce.js";import"./ResizeObserver-6fd345a6.js";import{K as A}from"./keycode-5e563e63.js";import{p as b}from"./pad-left-zeros-7128f39a.js";const L=(r,e,t,n)=>{if(t!==n)return n===r.length?{value:r.slice(0,t),position:t}:e.replaceDigitsWithZeroes(r,t,n);const s=e.isSegmentStart(t);return t===r.length?s?{value:r.slice(0,t-2),position:t-2}:{value:r.slice(0,t-1),position:t-1}:s?e.deleteSeparator(r,t):e.deleteDigit(r,t)},$=(r,e,t,n,i)=>{let s=r;const o=n;if(n===s.length&&s.length===t.getMaxLength())return{value:s,position:o};if(n!==s.length&&i===s.length){const a=t.isCursorAtSeparator(n)?n+1:n;s=r.slice(0,a)}return t.isCursorAtSeparator(o)?{value:s,position:o+1}:t.processKey(s,e,o)},B=(r,e)=>{if(!r)return{value:"",position:0};const t=e.autoComplete(r),n=t.length;return{value:t,position:n}},R=r=>r>7&&r<47&&r!==A.space,H=(r,e)=>r||e,N=(r,e,t)=>R(r)||H(e,t),T=r=>!isNaN(parseInt(r,10)),Z=(r,e,t)=>{if(!r)return;const n=t.autoComplete(r);n!==r&&e(n)},I=(r,e)=>e&&r.preventDefault(),G=({value:r="",onBlur:e,onChange:t,onKeyDown:n,format:i,inputRef:s,autofix:o=!1,disableAutocompleteOnBlur:a=!1,setPosition:g})=>{i.isValid(r);const c=l=>{const h=o?i.correctMinMaxValues(l):l;h===r||!i.isValid(h)||t(h)},V=o?i.correctMinMaxValues(r):r,d=i.getValidValue(V);return{value:d,onKeyDown:l=>{var h,f;const x=((h=s.current)===null||h===void 0?void 0:h.selectionStart)||0,S=((f=s.current)===null||f===void 0?void 0:f.selectionEnd)||0;let u;const{keyCode:M,key:C,ctrlKey:m,metaKey:P}=l.detail;if(T(C)||i.isSeparator(C)?(u=$(d,C,i,x,S),I(l,u)):M===A.backspace?(u=L(d,i,x,S),I(l,u)):M===A.enter?u=B(d,i):N(M,m,P)||l.preventDefault(),u){const{value:k,position:E}=u;c(k),g(E)}n&&n(l)},onChange:({detail:l})=>c(l.value),onBlur:()=>{a||Z(d,t,i),e&&e()},onPaste:l=>{var h,f;const x=(l.clipboardData||window.clipboardData).getData("text"),S=((h=s.current)===null||h===void 0?void 0:h.selectionStart)||0,u=((f=s.current)===null||f===void 0?void 0:f.selectionEnd)||0,M=i.formatPastedText(x,d,S,u);c(M)}}},U=G,p=(r,e,t,n=t)=>r.slice(0,t)+e+r.slice(n);class q{constructor({separator:e,inputSeparators:t=[],segments:n}){this.positionFormats=new Map,this.segments=[],this.separator=e,this.inputSeparators=[...t,e],this.enrichSegmentDefinitions(n)}tryAppendSeparator(e){const t=`${e}${this.separator}`;return this.isValid(t)?t:e}isSeparator(e){return this.inputSeparators.indexOf(e)!==-1}isValid(e){const t=e.split(this.separator);return t.length>this.segments.length?!1:t.every((n,i)=>{const s=this.segments[i];if(n==="")return i===t.length-1;if(!n.match(/^\d+$/)||n.length<s.length&&i!==t.length-1)return!1;const o=parseInt(n,10);return n.length>s.length?!1:o<s.min||o>s.max(e)?i===t.length-1&&n.length<s.length:!0})}getValidValue(e){let t=e;do{if(this.isValid(t))return this.tryAppendSeparator(t);t=t.substring(0,t.length-1)}while(t.length>0);return""}autoComplete(e){const[t,...n]=e.split(this.separator).reverse(),i=this.segments[n.length],s=this.padWithDefaultValue(t,i),o=[...n.reverse(),s];for(;o.length<this.segments.length;){const a=this.segments[o.length],g=this.padWithDefaultValue("",a);o.push(g)}return e=o.join(this.separator),e=this.correctMinMaxValues(e),e}getSegmentValueWithAddition(e,t,n){const i=this.positionFormats.get(e),s=t.substr(i.start,i.length),o=e-i.start,a=p(s,n,o,o+1);return parseInt(a,10)}replaceDigitsWithZeroes(e,t,n){const i=this.isCursorAtSeparator(t)?t+1:t;if(this.isCursorAtSeparator(t)&&t++,!this.isSegmentStart(t)){const o=this.positionFormats.get(t);e=p(e,b("",o.end-t),t,o.end),t=o.end+1}let s;for(;t<n&&(s=this.positionFormats.get(t+1));){const o=Math.min(n,s.end);e=p(e,b("",o-s.start),s.start,o),t=o+1}return e=this.correctMinMaxValues(e),{value:e,position:i}}handleSeparatorInput(e,t){if(t===e.length&&!this.isSegmentStart(t)){const n=this.positionFormats.get(t);let i=e.substr(n.start,n.length);return i=this.padWithDefaultValue(i,n),e=p(e,i,n.start,n.end),e=this.correctMinMaxValues(e),{value:e,position:e.length}}}isCursorAtSeparator(e){return 0<e&&e<this.getMaxLength()&&this.positionFormats.get(e)===void 0}isSegmentStart(e){return e===0||this.isCursorAtSeparator(e-1)}getSegmentMaxValue(e,t){return this.positionFormats.get(t).max(e)}getSegmentMinValue(e,t){return this.positionFormats.get(t).min}getMaxLength(){const e=this.segments[this.segments.length-1];return e.start+e.length}deleteSeparator(e,t){return e=p(e,"0",t-2,t-1),{value:this.correctMinMaxValues(e),position:t-2}}deleteDigit(e,t){e=p(e,"0",t-1,t);const n=e.length;return e.slice(n-2)==="0:"&&(e=e.slice(0,n-2)),{value:this.correctMinMaxValues(e),position:t-1}}correctMinMaxValues(e){let t=this.positionFormats.get(0);for(;t&&e.length>=t.end;){const n=parseInt(e.substr(t.start,t.length),10),i=t.max(e);if(n<t.min){let s=t.min.toFixed();s=b(s,t.length),e=p(e,s,t.start,t.end)}n>i&&(e=p(e,i.toFixed(),t.start,t.end)),t=this.positionFormats.get(t.end+1)}return e.substr(0,this.segments[this.segments.length-1].end)}formatPastedText(e,t,n,i){const s=e.trim().split("");let o=n,a=t;i>n&&i===t.length&&(a=t.slice(0,n));for(const g of s){if(o>=this.getMaxLength())break;const c=this.processKey(a,g,o);a=c.value,o=c.position}return this.tryAppendSeparator(a)}processKey(e,t,n){let i=e,s=n;if(this.isSeparator(t)){const o=this.handleSeparatorInput(i,s);o&&(i=o.value,s=o.position)}else{const o=s===i.length,a=this.getSegmentValueWithAddition(s,i,t),g=this.getSegmentMaxValue(i,s),c=this.getSegmentMinValue(i,s),V=parseInt(t,10)>parseInt(g.toFixed()[0],10),d=o||a.toFixed().length===1;this.isSegmentStart(s)&&d&&V?(i=p(i,`0${t}`,s,s+2),s+=2):a>g&&this.isSegmentStart(s)?(i=p(i,g.toFixed(),s,s+g.toFixed().length),s+=g.toFixed().length):a>g?(i=p(i,g.toFixed(),s-1,s+1),s+=1):a<c&&!this.isSegmentStart(s)?(i=p(i,c.toFixed(),s,s+1),s+=1):(i=p(i,t,s,s+1),s+=1)}return i=this.tryAppendSeparator(i),this.isCursorAtSeparator(s)&&s++,{value:i,position:s}}padWithDefaultValue(e,t){let n=(t.default||t.min).toFixed();return n=b(n,t.length),p(n,e,t.length-e.length,t.length)}enrichSegmentDefinitions(e){this.positionFormats=new Map,this.segments=[];let t=0;for(const n of e){const i=n.max,s=Object.assign(Object.assign({},n),{max:typeof i=="number"?()=>i:i,start:t,end:t+n.length});this.segments.push(s);for(let o=0;o<s.length;o++)this.positionFormats.set(t++,s);t++}}}const z=q,J=F.forwardRef((r,e)=>{var{value:t,onBlur:n,onChange:i,onKeyDown:s,mask:o,autofix:a=!1,disableAutocompleteOnBlur:g=!1}=r,c=D(r,["value","onBlur","onChange","onKeyDown","mask","autofix","disableAutocompleteOnBlur"]);const V=O(c),d=_(c),l=F.useRef(null),[h,f]=y.useState(null);y.useLayoutEffect(()=>{var m;h!==null&&((m=l.current)===null||m===void 0||m.setSelectionRange(h,h))},[h,l]);const x=U({format:new z(o),value:t,inputRef:l,autofix:a,disableAutocompleteOnBlur:g,onChange:m=>!c.readOnly&&w(i,{value:m}),onKeyDown:m=>!c.readOnly&&s&&j(s,m.detail,m),onBlur:()=>w(n),setPosition:f}),{onPaste:S}=x,u=D(x,["onPaste"]),M=Object.assign(Object.assign(Object.assign(Object.assign({},c),V),d),u),C=W(e,l);return F.createElement(K,Object.assign({},M,{ref:C,__nativeAttributes:{onPaste:S}}))}),rt=J;export{rt as M};
